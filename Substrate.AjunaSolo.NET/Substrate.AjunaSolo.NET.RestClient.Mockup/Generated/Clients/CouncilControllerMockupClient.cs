//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.AjunaSolo.NET.RestClient.Mockup.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.ajuna_solo_runtime;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_collective;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto;
   using Substrate.AjunaSolo.NET.RestClient.Mockup.Generated.Interfaces;
   
   public sealed class CouncilControllerMockupClient : MockupBaseClient, ICouncilControllerMockupClient
   {
      private HttpClient _httpClient;
      public CouncilControllerMockupClient(HttpClient httpClient)
      {
         _httpClient = httpClient;
      }
      public async Task<bool> SetProposals(BoundedVecT10 value)
      {
         return await SendMockupRequestAsync(_httpClient, "Council/Proposals", value.Encode(), Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CouncilStorage.ProposalsParams());
      }
      public async Task<bool> SetProposalOf(EnumRuntimeCall value, Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Council/ProposalOf", value.Encode(), Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CouncilStorage.ProposalOfParams(key));
      }
      public async Task<bool> SetVoting(Votes value, Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.primitive_types.H256 key)
      {
         return await SendMockupRequestAsync(_httpClient, "Council/Voting", value.Encode(), Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CouncilStorage.VotingParams(key));
      }
      public async Task<bool> SetProposalCount(U32 value)
      {
         return await SendMockupRequestAsync(_httpClient, "Council/ProposalCount", value.Encode(), Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CouncilStorage.ProposalCountParams());
      }
      public async Task<bool> SetMembers(BaseVec<AccountId32> value)
      {
         return await SendMockupRequestAsync(_httpClient, "Council/Members", value.Encode(), Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CouncilStorage.MembersParams());
      }
      public async Task<bool> SetPrime(AccountId32 value)
      {
         return await SendMockupRequestAsync(_httpClient, "Council/Prime", value.Encode(), Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CouncilStorage.PrimeParams());
      }
   }
}

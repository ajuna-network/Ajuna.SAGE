//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Attributes;
using Substrate.NetApi.Model.Types.Base;
using Substrate.NetApi.Model.Types.Metadata.Base;
using System.Collections.Generic;


namespace Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_sage.config.player
{
    
    
    /// <summary>
    /// >> 374 - Composite[pallet_sage.config.player.PlayerStats]
    /// </summary>
    [SubstrateNodeType(TypeDefEnum.Composite)]
    public sealed class PlayerStats : BaseType
    {
        
        /// <summary>
        /// >> minted_amount
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 MintedAmount { get; set; }
        /// <summary>
        /// >> forged_amount
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 ForgedAmount { get; set; }
        /// <summary>
        /// >> bought_amount
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 BoughtAmount { get; set; }
        /// <summary>
        /// >> sold_amount
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 SoldAmount { get; set; }
        /// <summary>
        /// >> first_mint
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> FirstMint { get; set; }
        /// <summary>
        /// >> latest_mint
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> LatestMint { get; set; }
        /// <summary>
        /// >> first_forge
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> FirstForge { get; set; }
        /// <summary>
        /// >> latest_forge
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32> LatestForge { get; set; }
        
        /// <inheritdoc/>
        public override string TypeName()
        {
            return "PlayerStats";
        }
        
        /// <inheritdoc/>
        public override byte[] Encode()
        {
            var result = new List<byte>();
            result.AddRange(MintedAmount.Encode());
            result.AddRange(ForgedAmount.Encode());
            result.AddRange(BoughtAmount.Encode());
            result.AddRange(SoldAmount.Encode());
            result.AddRange(FirstMint.Encode());
            result.AddRange(LatestMint.Encode());
            result.AddRange(FirstForge.Encode());
            result.AddRange(LatestForge.Encode());
            return result.ToArray();
        }
        
        /// <inheritdoc/>
        public override void Decode(byte[] byteArray, ref int p)
        {
            var start = p;
            MintedAmount = new Substrate.NetApi.Model.Types.Primitive.U32();
            MintedAmount.Decode(byteArray, ref p);
            ForgedAmount = new Substrate.NetApi.Model.Types.Primitive.U32();
            ForgedAmount.Decode(byteArray, ref p);
            BoughtAmount = new Substrate.NetApi.Model.Types.Primitive.U32();
            BoughtAmount.Decode(byteArray, ref p);
            SoldAmount = new Substrate.NetApi.Model.Types.Primitive.U32();
            SoldAmount.Decode(byteArray, ref p);
            FirstMint = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            FirstMint.Decode(byteArray, ref p);
            LatestMint = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            LatestMint.Decode(byteArray, ref p);
            FirstForge = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            FirstForge.Decode(byteArray, ref p);
            LatestForge = new Substrate.NetApi.Model.Types.Base.BaseOpt<Substrate.NetApi.Model.Types.Primitive.U32>();
            LatestForge.Decode(byteArray, ref p);
            var bytesLength = p - start;
            TypeSize = bytesLength;
            Bytes = new byte[bytesLength];
            global::System.Array.Copy(byteArray, start, Bytes, 0, bytesLength);
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Substrate.NetApi.Model.Types.Base;
using Substrate.ServiceLayer.Attributes;
using Substrate.ServiceLayer.Storage;
using System.Collections.Generic;
using System.Threading.Tasks;


namespace Substrate.AjunaSolo.NET.RestService.Generated.Storage
{
    
    
    /// <summary>
    /// ICasinoJamSeasonsStorage interface definition.
    /// </summary>
    public interface ICasinoJamSeasonsStorage : IStorage
    {
        
        /// <summary>
        /// >> CurrentSeasonStatus
        /// </summary>
        Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonStatus GetCurrentSeasonStatus();
        
        /// <summary>
        /// >> LatestSeason
        ///  Latest SeasonId created through 'update_season'
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetLatestSeason();
        
        /// <summary>
        /// >> FinishedSeasons
        /// </summary>
        Substrate.NetApi.Model.Types.Base.BaseTuple GetFinishedSeasons(string key);
        
        /// <summary>
        /// >> NextSeasonChain
        ///  Use to represent a linked list of SeasonId. All entries will have a
        ///  value indicating the next season id to them except the latest season added
        ///  which will not have a value for it.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetNextSeasonChain(string key);
        
        /// <summary>
        /// >> PrevSeasonChain
        ///  Use to represent a linked list of SeasonId. All entries will have a
        ///  value indicating the previous season id to them except the firsts season added
        ///  which will not have a value for it.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetPrevSeasonChain(string key);
        
        /// <summary>
        /// >> Seasons
        ///  Storage for the seasons.
        /// </summary>
        Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.ajuna_primitives.season_manager.SeasonConfig GetSeasons(string key);
        
        /// <summary>
        /// >> SeasonMetadatas
        ///  Storage for the season's metadata.
        /// </summary>
        Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonMetadata GetSeasonMetadatas(string key);
        
        /// <summary>
        /// >> SeasonSchedules
        ///  Storage for the season's schedules.
        /// </summary>
        Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonSchedule GetSeasonSchedules(string key);
        
        /// <summary>
        /// >> SeasonScheduledActions
        /// </summary>
        Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.EnumSeasonScheduledAction GetSeasonScheduledActions(string key);
        
        /// <summary>
        /// >> AssetSeasonRegister
        ///  Stores the assets season id registration.
        /// </summary>
        Substrate.NetApi.Model.Types.Primitive.U32 GetAssetSeasonRegister(string key);
    }
    
    /// <summary>
    /// CasinoJamSeasonsStorage class definition.
    /// </summary>
    public sealed class CasinoJamSeasonsStorage : ICasinoJamSeasonsStorage
    {
        
        /// <summary>
        /// _currentSeasonStatusTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonStatus> _currentSeasonStatusTypedStorage;
        
        /// <summary>
        /// _latestSeasonTypedStorage typed storage field
        /// </summary>
        private TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> _latestSeasonTypedStorage;
        
        /// <summary>
        /// _finishedSeasonsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple> _finishedSeasonsTypedStorage;
        
        /// <summary>
        /// _nextSeasonChainTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> _nextSeasonChainTypedStorage;
        
        /// <summary>
        /// _prevSeasonChainTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> _prevSeasonChainTypedStorage;
        
        /// <summary>
        /// _seasonsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.ajuna_primitives.season_manager.SeasonConfig> _seasonsTypedStorage;
        
        /// <summary>
        /// _seasonMetadatasTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonMetadata> _seasonMetadatasTypedStorage;
        
        /// <summary>
        /// _seasonSchedulesTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonSchedule> _seasonSchedulesTypedStorage;
        
        /// <summary>
        /// _seasonScheduledActionsTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.EnumSeasonScheduledAction> _seasonScheduledActionsTypedStorage;
        
        /// <summary>
        /// _assetSeasonRegisterTypedStorage typed storage field
        /// </summary>
        private TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> _assetSeasonRegisterTypedStorage;
        
        /// <summary>
        /// CasinoJamSeasonsStorage constructor.
        /// </summary>
        public CasinoJamSeasonsStorage(IStorageDataProvider storageDataProvider, List<IStorageChangeDelegate> storageChangeDelegates)
        {
            this.CurrentSeasonStatusTypedStorage = new TypedStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonStatus>("CasinoJamSeasons.CurrentSeasonStatus", storageDataProvider, storageChangeDelegates);
            this.LatestSeasonTypedStorage = new TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32>("CasinoJamSeasons.LatestSeason", storageDataProvider, storageChangeDelegates);
            this.FinishedSeasonsTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple>("CasinoJamSeasons.FinishedSeasons", storageDataProvider, storageChangeDelegates);
            this.NextSeasonChainTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32>("CasinoJamSeasons.NextSeasonChain", storageDataProvider, storageChangeDelegates);
            this.PrevSeasonChainTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32>("CasinoJamSeasons.PrevSeasonChain", storageDataProvider, storageChangeDelegates);
            this.SeasonsTypedStorage = new TypedMapStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.ajuna_primitives.season_manager.SeasonConfig>("CasinoJamSeasons.Seasons", storageDataProvider, storageChangeDelegates);
            this.SeasonMetadatasTypedStorage = new TypedMapStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonMetadata>("CasinoJamSeasons.SeasonMetadatas", storageDataProvider, storageChangeDelegates);
            this.SeasonSchedulesTypedStorage = new TypedMapStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonSchedule>("CasinoJamSeasons.SeasonSchedules", storageDataProvider, storageChangeDelegates);
            this.SeasonScheduledActionsTypedStorage = new TypedMapStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.EnumSeasonScheduledAction>("CasinoJamSeasons.SeasonScheduledActions", storageDataProvider, storageChangeDelegates);
            this.AssetSeasonRegisterTypedStorage = new TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32>("CasinoJamSeasons.AssetSeasonRegister", storageDataProvider, storageChangeDelegates);
        }
        
        /// <summary>
        /// _currentSeasonStatusTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonStatus> CurrentSeasonStatusTypedStorage
        {
            get
            {
                return _currentSeasonStatusTypedStorage;
            }
            set
            {
                _currentSeasonStatusTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _latestSeasonTypedStorage property
        /// </summary>
        public TypedStorage<Substrate.NetApi.Model.Types.Primitive.U32> LatestSeasonTypedStorage
        {
            get
            {
                return _latestSeasonTypedStorage;
            }
            set
            {
                _latestSeasonTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _finishedSeasonsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Base.BaseTuple> FinishedSeasonsTypedStorage
        {
            get
            {
                return _finishedSeasonsTypedStorage;
            }
            set
            {
                _finishedSeasonsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _nextSeasonChainTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> NextSeasonChainTypedStorage
        {
            get
            {
                return _nextSeasonChainTypedStorage;
            }
            set
            {
                _nextSeasonChainTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _prevSeasonChainTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> PrevSeasonChainTypedStorage
        {
            get
            {
                return _prevSeasonChainTypedStorage;
            }
            set
            {
                _prevSeasonChainTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _seasonsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.ajuna_primitives.season_manager.SeasonConfig> SeasonsTypedStorage
        {
            get
            {
                return _seasonsTypedStorage;
            }
            set
            {
                _seasonsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _seasonMetadatasTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonMetadata> SeasonMetadatasTypedStorage
        {
            get
            {
                return _seasonMetadatasTypedStorage;
            }
            set
            {
                _seasonMetadatasTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _seasonSchedulesTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonSchedule> SeasonSchedulesTypedStorage
        {
            get
            {
                return _seasonSchedulesTypedStorage;
            }
            set
            {
                _seasonSchedulesTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _seasonScheduledActionsTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.EnumSeasonScheduledAction> SeasonScheduledActionsTypedStorage
        {
            get
            {
                return _seasonScheduledActionsTypedStorage;
            }
            set
            {
                _seasonScheduledActionsTypedStorage = value;
            }
        }
        
        /// <summary>
        /// _assetSeasonRegisterTypedStorage property
        /// </summary>
        public TypedMapStorage<Substrate.NetApi.Model.Types.Primitive.U32> AssetSeasonRegisterTypedStorage
        {
            get
            {
                return _assetSeasonRegisterTypedStorage;
            }
            set
            {
                _assetSeasonRegisterTypedStorage = value;
            }
        }
        
        /// <summary>
        /// Connects to all storages and initializes the change subscription handling.
        /// </summary>
        public async Task InitializeAsync(Substrate.ServiceLayer.Storage.IStorageDataProvider dataProvider)
        {
            await CurrentSeasonStatusTypedStorage.InitializeAsync("CasinoJamSeasons", "CurrentSeasonStatus");
            await LatestSeasonTypedStorage.InitializeAsync("CasinoJamSeasons", "LatestSeason");
            await FinishedSeasonsTypedStorage.InitializeAsync("CasinoJamSeasons", "FinishedSeasons");
            await NextSeasonChainTypedStorage.InitializeAsync("CasinoJamSeasons", "NextSeasonChain");
            await PrevSeasonChainTypedStorage.InitializeAsync("CasinoJamSeasons", "PrevSeasonChain");
            await SeasonsTypedStorage.InitializeAsync("CasinoJamSeasons", "Seasons");
            await SeasonMetadatasTypedStorage.InitializeAsync("CasinoJamSeasons", "SeasonMetadatas");
            await SeasonSchedulesTypedStorage.InitializeAsync("CasinoJamSeasons", "SeasonSchedules");
            await SeasonScheduledActionsTypedStorage.InitializeAsync("CasinoJamSeasons", "SeasonScheduledActions");
            await AssetSeasonRegisterTypedStorage.InitializeAsync("CasinoJamSeasons", "AssetSeasonRegister");
        }
        
        /// <summary>
        /// Implements any storage change for CasinoJamSeasons.CurrentSeasonStatus
        /// </summary>
        [StorageChange("CasinoJamSeasons", "CurrentSeasonStatus")]
        public void OnUpdateCurrentSeasonStatus(string data)
        {
            CurrentSeasonStatusTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> CurrentSeasonStatus
        /// </summary>
        public Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonStatus GetCurrentSeasonStatus()
        {
            return CurrentSeasonStatusTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for CasinoJamSeasons.LatestSeason
        /// </summary>
        [StorageChange("CasinoJamSeasons", "LatestSeason")]
        public void OnUpdateLatestSeason(string data)
        {
            LatestSeasonTypedStorage.Update(data);
        }
        
        /// <summary>
        /// >> LatestSeason
        ///  Latest SeasonId created through 'update_season'
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetLatestSeason()
        {
            return LatestSeasonTypedStorage.Get();
        }
        
        /// <summary>
        /// Implements any storage change for CasinoJamSeasons.FinishedSeasons
        /// </summary>
        [StorageChange("CasinoJamSeasons", "FinishedSeasons")]
        public void OnUpdateFinishedSeasons(string key, string data)
        {
            FinishedSeasonsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> FinishedSeasons
        /// </summary>
        public Substrate.NetApi.Model.Types.Base.BaseTuple GetFinishedSeasons(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (FinishedSeasonsTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Base.BaseTuple result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for CasinoJamSeasons.NextSeasonChain
        /// </summary>
        [StorageChange("CasinoJamSeasons", "NextSeasonChain")]
        public void OnUpdateNextSeasonChain(string key, string data)
        {
            NextSeasonChainTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> NextSeasonChain
        ///  Use to represent a linked list of SeasonId. All entries will have a
        ///  value indicating the next season id to them except the latest season added
        ///  which will not have a value for it.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetNextSeasonChain(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (NextSeasonChainTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for CasinoJamSeasons.PrevSeasonChain
        /// </summary>
        [StorageChange("CasinoJamSeasons", "PrevSeasonChain")]
        public void OnUpdatePrevSeasonChain(string key, string data)
        {
            PrevSeasonChainTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> PrevSeasonChain
        ///  Use to represent a linked list of SeasonId. All entries will have a
        ///  value indicating the previous season id to them except the firsts season added
        ///  which will not have a value for it.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetPrevSeasonChain(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (PrevSeasonChainTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for CasinoJamSeasons.Seasons
        /// </summary>
        [StorageChange("CasinoJamSeasons", "Seasons")]
        public void OnUpdateSeasons(string key, string data)
        {
            SeasonsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> Seasons
        ///  Storage for the seasons.
        /// </summary>
        public Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.ajuna_primitives.season_manager.SeasonConfig GetSeasons(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (SeasonsTypedStorage.Dictionary.TryGetValue(key, out Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.ajuna_primitives.season_manager.SeasonConfig result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for CasinoJamSeasons.SeasonMetadatas
        /// </summary>
        [StorageChange("CasinoJamSeasons", "SeasonMetadatas")]
        public void OnUpdateSeasonMetadatas(string key, string data)
        {
            SeasonMetadatasTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> SeasonMetadatas
        ///  Storage for the season's metadata.
        /// </summary>
        public Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonMetadata GetSeasonMetadatas(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (SeasonMetadatasTypedStorage.Dictionary.TryGetValue(key, out Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonMetadata result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for CasinoJamSeasons.SeasonSchedules
        /// </summary>
        [StorageChange("CasinoJamSeasons", "SeasonSchedules")]
        public void OnUpdateSeasonSchedules(string key, string data)
        {
            SeasonSchedulesTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> SeasonSchedules
        ///  Storage for the season's schedules.
        /// </summary>
        public Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonSchedule GetSeasonSchedules(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (SeasonSchedulesTypedStorage.Dictionary.TryGetValue(key, out Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.SeasonSchedule result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for CasinoJamSeasons.SeasonScheduledActions
        /// </summary>
        [StorageChange("CasinoJamSeasons", "SeasonScheduledActions")]
        public void OnUpdateSeasonScheduledActions(string key, string data)
        {
            SeasonScheduledActionsTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> SeasonScheduledActions
        /// </summary>
        public Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.EnumSeasonScheduledAction GetSeasonScheduledActions(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (SeasonScheduledActionsTypedStorage.Dictionary.TryGetValue(key, out Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_seasons.types.EnumSeasonScheduledAction result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
        
        /// <summary>
        /// Implements any storage change for CasinoJamSeasons.AssetSeasonRegister
        /// </summary>
        [StorageChange("CasinoJamSeasons", "AssetSeasonRegister")]
        public void OnUpdateAssetSeasonRegister(string key, string data)
        {
            AssetSeasonRegisterTypedStorage.Update(key, data);
        }
        
        /// <summary>
        /// >> AssetSeasonRegister
        ///  Stores the assets season id registration.
        /// </summary>
        public Substrate.NetApi.Model.Types.Primitive.U32 GetAssetSeasonRegister(string key)
        {
            if ((key == null))
            {
                return null;
            }
            if (AssetSeasonRegisterTypedStorage.Dictionary.TryGetValue(key, out Substrate.NetApi.Model.Types.Primitive.U32 result))
            {
                return result;
            }
            else
            {
                return null;
            }
        }
    }
}

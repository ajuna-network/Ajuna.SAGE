//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.AjunaSolo.NET.RestClient.Generated.Clients
{
   using System;
   using System.Threading.Tasks;
   using System.Net.Http;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_ajuna_tournament.config;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.bounded_collections.bounded_vec;
   using Substrate.AjunaSolo.NET.RestClient.Generated.Interfaces;
   
   public sealed class CasinoJamTournamentControllerClient : BaseClient, ICasinoJamTournamentControllerClient
   {
      private HttpClient _httpClient;
      private BaseSubscriptionClient _subscriptionClient;
      public CasinoJamTournamentControllerClient(HttpClient httpClient, BaseSubscriptionClient subscriptionClient)
      {
         _httpClient = httpClient;
         _subscriptionClient = subscriptionClient;
      }
      public async Task<EnumTournamentScheduledAction> GetTournamentSchedules(U32 key)
      {
         return await SendRequestAsync<EnumTournamentScheduledAction>(_httpClient, "casinojamtournament/tournamentschedules", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.TournamentSchedulesParams(key));
      }
      public async Task<bool> SubscribeTournamentSchedules(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("CasinoJamTournament.TournamentSchedules", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.TournamentSchedulesParams(key));
      }
      public async Task<AccountId32> GetTreasuryAccountsCache(U32 key)
      {
         return await SendRequestAsync<AccountId32>(_httpClient, "casinojamtournament/treasuryaccountscache", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.TreasuryAccountsCacheParams(key));
      }
      public async Task<bool> SubscribeTreasuryAccountsCache(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("CasinoJamTournament.TreasuryAccountsCache", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.TreasuryAccountsCacheParams(key));
      }
      public async Task<U32> GetNextTournamentIds(U32 key)
      {
         return await SendRequestAsync<U32>(_httpClient, "casinojamtournament/nexttournamentids", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.NextTournamentIdsParams(key));
      }
      public async Task<bool> SubscribeNextTournamentIds(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("CasinoJamTournament.NextTournamentIds", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.NextTournamentIdsParams(key));
      }
      public async Task<TournamentConfig> GetTournaments(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, U32> key)
      {
         return await SendRequestAsync<TournamentConfig>(_httpClient, "casinojamtournament/tournaments", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.TournamentsParams(key));
      }
      public async Task<bool> SubscribeTournaments(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("CasinoJamTournament.Tournaments", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.TournamentsParams(key));
      }
      public async Task<EnumTournamentState> GetActiveTournaments(U32 key)
      {
         return await SendRequestAsync<EnumTournamentState>(_httpClient, "casinojamtournament/activetournaments", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.ActiveTournamentsParams(key));
      }
      public async Task<bool> SubscribeActiveTournaments(U32 key)
      {
         return await _subscriptionClient.SubscribeAsync("CasinoJamTournament.ActiveTournaments", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.ActiveTournamentsParams(key));
      }
      public async Task<BoundedVecT31> GetTournamentRankings(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, U32> key)
      {
         return await SendRequestAsync<BoundedVecT31>(_httpClient, "casinojamtournament/tournamentrankings", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.TournamentRankingsParams(key));
      }
      public async Task<bool> SubscribeTournamentRankings(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("CasinoJamTournament.TournamentRankings", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.TournamentRankingsParams(key));
      }
      public async Task<EnumRewardClaimState> GetTournamentRewardClaims(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, U32, U32> key)
      {
         return await SendRequestAsync<EnumRewardClaimState>(_httpClient, "casinojamtournament/tournamentrewardclaims", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.TournamentRewardClaimsParams(key));
      }
      public async Task<bool> SubscribeTournamentRewardClaims(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("CasinoJamTournament.TournamentRewardClaims", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.TournamentRewardClaimsParams(key));
      }
      public async Task<EnumGoldenDuckState> GetGoldenDucks(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, U32> key)
      {
         return await SendRequestAsync<EnumGoldenDuckState>(_httpClient, "casinojamtournament/goldenducks", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.GoldenDucksParams(key));
      }
      public async Task<bool> SubscribeGoldenDucks(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("CasinoJamTournament.GoldenDucks", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.GoldenDucksParams(key));
      }
      public async Task<EnumRewardClaimState> GetGoldenDuckRewardClaims(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, U32> key)
      {
         return await SendRequestAsync<EnumRewardClaimState>(_httpClient, "casinojamtournament/goldenduckrewardclaims", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.GoldenDuckRewardClaimsParams(key));
      }
      public async Task<bool> SubscribeGoldenDuckRewardClaims(Substrate.NetApi.Model.Types.Base.BaseTuple<U32, U32> key)
      {
         return await _subscriptionClient.SubscribeAsync("CasinoJamTournament.GoldenDuckRewardClaims", Substrate.AjunaSolo.NET.NetApiExt.Generated.Storage.CasinoJamTournamentStorage.GoldenDuckRewardClaimsParams(key));
      }
   }
}

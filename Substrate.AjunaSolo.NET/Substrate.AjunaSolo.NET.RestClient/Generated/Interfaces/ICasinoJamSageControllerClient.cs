//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Substrate.AjunaSolo.NET.RestClient.Generated.Interfaces
{
   using System;
   using System.Threading.Tasks;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.sp_core.crypto;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_sage.config;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.example_transition.transition;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Types.Base;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.pallet_sage.config.player;
   using Substrate.NetApi.Model.Types.Base;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.example_transition.asset;
   using Substrate.NetApi.Model.Types.Primitive;
   using Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.ajuna_primitives.asset_manager;
   
   public interface ICasinoJamSageControllerClient
   {
      Task<AccountId32> GetOrganizer();
      Task<bool> SubscribeOrganizer();
      Task<GeneralConfig> GetGeneralConfigStore();
      Task<bool> SubscribeGeneralConfigStore();
      Task<CasinoJamTransitionConfig> GetTransitionConfigStore();
      Task<bool> SubscribeTransitionConfigStore();
      Task<Arr5U8> GetSeasonUnlocks(BaseTuple<U32, EnumLockableFeature> key);
      Task<bool> SubscribeSeasonUnlocks(BaseTuple<U32, EnumLockableFeature> key);
      Task<PlayerConfig> GetPlayerSeasonConfigs(BaseTuple<AccountId32, U32> key);
      Task<bool> SubscribePlayerSeasonConfigs(BaseTuple<AccountId32, U32> key);
      Task<PlayerStats> GetPlayerSeasonStats(BaseTuple<AccountId32, U32> key);
      Task<bool> SubscribePlayerSeasonStats(BaseTuple<AccountId32, U32> key);
      Task<BaseTuple<AccountId32, Asset>> GetAssets(U32 key);
      Task<bool> SubscribeAssets(U32 key);
      Task<BaseTuple> GetAssetOwners(BaseTuple<AccountId32, U32, U32> key);
      Task<bool> SubscribeAssetOwners(BaseTuple<AccountId32, U32, U32> key);
      Task<U8> GetAssetsOwnedCount(BaseTuple<AccountId32, U32> key);
      Task<bool> SubscribeAssetsOwnedCount(BaseTuple<AccountId32, U32> key);
      Task<EnumVariantType> GetSeasonTradeFilters(U32 key);
      Task<bool> SubscribeSeasonTradeFilters(U32 key);
      Task<EnumVariantType> GetSeasonTransferFilters(U32 key);
      Task<bool> SubscribeSeasonTransferFilters(U32 key);
      Task<U128> GetAssetTradePrices(BaseTuple<U32, U32> key);
      Task<bool> SubscribeAssetTradePrices(BaseTuple<U32, U32> key);
      Task<Lock> GetLockedAssets(U32 key);
      Task<bool> SubscribeLockedAssets(U32 key);
      Task<U128> GetAssetFunds(BaseTuple<U32, Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.ajuna_payment_handler.withdraw_credit.EnumWithdrawKind> key);
      Task<bool> SubscribeAssetFunds(BaseTuple<U32, Substrate.AjunaSolo.NET.NetApiExt.Generated.Model.ajuna_payment_handler.withdraw_credit.EnumWithdrawKind> key);
   }
}
